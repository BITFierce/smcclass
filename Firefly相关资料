Firefly简介
Firefly是Hansky（汉星天）公司提供的软件配置，基于先进的配置管理理论，采用全新的系统体系架构，实现企业级的全面的软件开发配置管理。
使用Firefly可以轻松管理、维护整个企业的整个软件资产，包括程序代码和相关文档。Firefly是一个功能完善、运行速度极快的软件配置管理系统，可以支持不同的操作系统和多种集成开发环境，因此它能在整个企业中的不同团队，不同项目中都得以广泛应用。　
Firefly基于真正的客户机/服务器体系结构，不依赖于任何特殊的网络文件系统，可以平滑地运行在不同的LAN、WAN环境中。它的安装配置过程简单易用，开发团队可以快速掌握Firefly的使用技巧，立即进入高效率的工作状态。Firefly可以自动、安全地保存代码的每一次变化内容，避免代码被无意地覆盖、修改。 项目管理人员使用Firefly可以有效地组织开发力量进行并行开发和管理项目中各阶段点的各种资源，使得产品发布易于管理；并可以快速地回溯到任一历史版本。系统管理员使用Firefly的内置工具可以方便的进行存储库的备份和恢复，而不依赖于任何第三方工具。 



Firefly特点
Firefly是汉星天公司开发的新一代软件配置管理工具,具有良好的易用性，开发团队可以快速掌握Firefly的使用技巧，立即进入高效率的工作状态：
跨平台使用
汉星天的所有产品都是基于Java1.2开发的。 它可以在支持JDK1.2或更高版本的任何一个平台上运行，如Window NT，Windows 2000, Linux, Solaris, HP-UX, AIX等，其移植非常方便，设想用户以前是在Windows 2000 Server上使用该系统，而现在要运行在Solaris平台上，不需作任何改动，只需简单的拷贝和配置，在短短几分钟之内就可以完成。对于使用多个不同的平台进行软件开发、测试、运行的公司来说，一个统一、支持多平台的配置管理系统是最理想的。如果使用的配置管理系统只支持单一平台，那么势必给开发、测试、发布的各环节带来很大的不便，大量的时间将被浪费于代码的手工上传、下载中。
并发版本控制
Firefly支持多用户并行开发。它是一个基于Copy-Modify-Merge(拷贝、修改、合并) 的并行开发模式，团队的开发人员之间无须好象排队一样等待修改代码。开发人员可以并行开发、更改代码。并行开发可能会带来代码冲突，如两个同时修改了同一个文件，工具可以自动检测到代码冲突，并自动合并，或帮助开发人员手动解决。并行开发使团队开发快速、高效。
异地开发支持
Firefly 通过在每个开发地点建立复制、能自动或手动同步的存储库，为地理分布的开发团队提供很好的支持。支持两种异地开发模式：并行开发——每个地点在自己的工作空间中进行开发工作，互不干扰，然后通过归并的手段集成所有的开发工作；连续开发模式——开发团队在同一工作空间工作，通过控制权限的转换，实现顺序开发。
基于TCP/IP协议，支持不同的LAN或WAN
客户端和服务器端的程序完全通过TCP/IP协议来通信，因此不依赖于象NFS那样的共享文件系统，SCM系统更加安全可靠，能在任何局域网（LAN）或广域网（WAN）中正常工作。如果依赖于NFS等文件系统，则需要将存储区共享出来，客户端才能使用，这样使得存储数据极不安全，前段时间广泛蔓延的尼姆达（Nimda）和尼姆达二号病毒就是专门攻击网络上的共享文件夹，致使很多配置管理系统瘫痪，数据严重损坏。
一旦将文件从服务器上复制到用户自己的机器上，普通的用户操作是无需访问网络的，如编译、删除、移动。支持脱机工作、移动办公，在不同网络环境中提供100%的兼容性，所以无论在什么样的操作系统下，所有客户端程序和服务器端程序都是兼容的。
原子事务
在产品中引入了原子事务的概念。对于一个包含多个文件改变的入库操作都有一个单一的提交点，保证原子级的事务交易。例如，您为了修改一个Bug而修改了三个文件，当您提交这些改变时，会确保您在服务器端同时改变了这三个文件，或者一个都没改变，服务器的workspace能够保证数据的一致性。这样能够处理一些操作过程中的异常情况，比如提交过程中网络中断等。大多数SCM系统尚不支持这一功能，一个不完整的putback将有可能导致同事无法build。
Defect 跟踪的整合
Firefly完全整合于Butterfly（汉星天公司的错误跟踪系统）。在Firefly上的每一个改变，都能与Butterfly中的一个Defect、RFE (建议请求Request for Enhancement) 或Task相联接。这两个系统都提供了基于浏览器的用户界面，当你修改了一些文件，在putback到Firefly时提供了相应的Bug ID, 那么两个系统中都会建立相互的链接。此时，Butterfly中全面记载了整个开发的历史过程，包括谁作了修改，修改了什么，为什么修改；便于管理和追踪开发过程中危害软件质量以及影响开发周期的缺陷和变化。
Visual Studio集成
Firefly支持Microsoft SCC API， 用户能够在Visual Studio中直接使用Firefly进行源代码版本控制。
快速标记（标签）
在Firefly中标记一个workspace是极快的，并且对于数据库来说大小几乎是没有改变的。在workspace中建立一个检查点（Checkpoint）也是相当容易的。 标记Workspace有很多作用，如保存一个基线版本或发布版本。有了标记，查找一个文件的某一历史版本，如/src/main.c在alpha1版中的内容，将非常容易。
易于代码检验
Firefly在服务器上可以跟踪所有客户端的workspace，在putback到父workspace之前，用户可以把local workspace中的修改先上载到服务器端的镜像中。这样代码检验的人甚至不用离开座位，就可以通过使用浏览器浏览这些代码，检查哪些文件修改了、新加了、删除了、移动位置了，及修改哪些内容。
跟踪workspace的改变
Firefly中一个workspace的修改可以记录一系列的文件改变，并不只针对某一单一文件的改变。每个workspace修改基本上是为了完成一件工作，并且相应的有一个详细的描述。Firefly中workspace的修改记录着相关文件的新建、删除、移动、复制以及更新。这样我们可以从整体的角度了解项目的变化，例如可以迅速列出为了增加一个新功能而改动或新添的文件列表。
跟踪branch的改变
Firefly中一个branch的修改可以记录一系列的文件改变，并不只针对某一单一文件的改变。每个branch修改基本上是为了完成一件工作，并且相应的有一个详细的描述。Firefly中branch的修改记录着相关文件的新建、删除、移动、复制以及更新。这样我们可以从整体的角度了解项目的变化，例如可以迅速列出为了增加一个新功能而改动或新添的文件列表。
安全性
Firefly支持身份验证和访问控制。用户需要一个用户名/密码来访问Firefly的服务器，并且Firefly的服务器workspace能对权限进行配置，诸如以下操作update、bringover、putback和admin。这些都能帮助企业保护机密数据。
处理二进制文件
Firefly不仅可以处理文本文件，并且也可以管理二进制文件，修改后的二进制文件只存储其不同的部分，大大节省了存储空间。
文件的重命名
Firefly允许文件重命名和移动位置。这些操作也能象文件的修改操作一样传播给其他关联workspace。 大多数SCM系统对于文件改名、移动和删除的处理能力很低，而且使用繁琐。Firefly对这些操作有极好的支持。这个功能对于代码的组织是极为重要的。
数据的完整性
Firefly可以对于每个文件和每个delta（文件修改的部分）进行校验。因为这些数据很重要，每一个文件Firefly都提供冗余校验，使用MD5作为文件的校验和。文件的内容错误可能是由坏的存储（DIMM），出错的NFS，或是SPARC/Linux的缓存别名中的Bug所导致。这些错误都可以被Firefly发现。
Email通知
对于每一个workspace用户可以针对bringover/putback操作设定Email通知。这样，当一个开发人员putback了一些修改，系统可以自动通知其他相关人员。
自带备份/恢复功能
无需采用第三方工具即可实现增量和完整备份。
分布式存储、脱机操作
在于服务器断开的情况下，客户端仍然可以保存本地文件的所有版本，减少风险
针对项目的分支策略
一般的配置管理工具，都是针对文件做分支。有一定的局限性，例如无法很好把握整个项目的变更情况，但是Firefly的分支策略是针对项目进行，能够清晰记录项目中的每一次Change—Set。
分支的比较和归并
Firefly可以支持整个分支的比较和归并。
文件的重命名和移动
Firefly对文件重命名和移动的操作就像文件的修改一样方便，文件的所有历史都会保存下来，而且可以自动地解决因文件的移动引起的冲突。
简单方便的email自动通知功能
能够自动将开发过程中的重要操作具体细节通知相应负责人。

其他特点：
独立管理用户和组，不需与系统（NT Domain、NIS）绑定，减少管理上的难度。
通过浏览器界面与变更管理系统Hansky Butterfly集成，直观方便
全新的体系架构，采用类三层结构，基于TCP/IP 协议，完全隔离后台存储。因此无需共享存储区，客户端甚至不需要了解存储区的具体位置，整个系统更加安全、可靠
可以对工作区、目录及文件三个层次进行控制，访问控制策略类似于NTFS的安全模式，更加灵活，基本可以适应任何权限控制要求而无需额外操作
对于二进制文件和Word文档，也能够采用增量的方式存储，大大节省硬盘资源，并且节省网络带宽，缩短网络传输时间
单进程、多线程的应用服务器，对系统性能影响最小
上下传都只涉及增量部分
上手快，开发人员的培训只需2~3小时
需要掌握的命令不多
管理员只需一天的培训，管理、维护简便
相对同类厂商有本地化优势
相对低的服务器和带宽要求，节约硬件成本
实施简单，维护容易，节约隐性实施成本






Firefly作用
实现企业级的团队协同开发 
强大的并行开发支持
Hansky Firefly从设计之初就充分考虑到企业级用户在团队开发、异地协作、多平台环境和数据安全等多方面的需求在保证性能的同时全力打造企业级团队协同开发支撑环境。强大的并行开发支持 
作为新一代的面向项目的配置管理工具Firefly借助先进的FleXtream技术为用户提供强大的并行开发管理能力满足项目组中不同目的的分支需求可以方便地进行分支的比较和归并等高级配置管理操作能够满足大规模企业中多人、多项目、多团队的开发需求。 
针对单个文件Firefly全面支持Copy-Modify-Merge复制-修改-合并并发开发模式。开发人员并发开发、更改代码Firefly会自动检测出代码冲突自动或提示开发人员手动解决冲突。
完善的异地及分布式开发支持 
Firefly的Client/Server体系架构建立在TCP/IP协议之上能够轻松支持跨地域的分布式开发需求。其特有的SmartTransfer技术确保了服务器与客户端之间总是传输版本间的差异大大减小了网络带宽占用提高了数据交换的效率。而多个开发场所中的存储库则通过Firefly的ServerSync模块实现同步确保数据的一致性。
良好的跨平台能力 
Firefly采用JAVA开发借助于JAVA提供的跨平台特性Firefly能够运行于多种操作系统之上充分利用用户现有的软硬件资源。 
优异的扩展性
Firefly Server中的数据存储于版本数据库Repository中每个版本数据库的大小上限只受操作系统文件系统规模的限制。同时版本数据库非常容易迁移在处理能力不够的情况下可以方便地迁移到运行于更高端平台的Firefly Server中。 
可靠的数据安全 
Firefly采用了多种方式确保数据的安全在数据传输上支持SSL协议防止关键资料在传输过程中的泄漏采用了专有的版本数据库而不是文件存储数据不仅保证了数据的可靠存储而且保存了数据的历史支持身份认证并可以提供精确到文件的访问控制确保数据的授权访问。 
集中管理企业知识资产 
开发过程中产生的文档、代码和测试案例等都是企业宝贵的知识资产Firefly以其版本化的管理、安全可靠的数据存储、方便的资产访问功能帮助企业实现对软件知识资产的有效管理。 
集中式版本化的文档存储 
Firefly采用版本化数据库集中存储软件开发过程中产生的各种文档。它能够记录文件的所有历史操作包括移动、重命名和删除等并可完整记录产生冲突的所有文件版本，即：祖先版本、父版本1、父版本2以及归并版本真正实现了文档的可追溯性。
灵活的权限控制 
Firefly支持分支、目录、文件3个级别的权限设置适应不同层次的权限管理需求。
多渠道的客户端访问 
Firefly为用户提供了Web页面、命令行、Firefly Client和常用IDE集成等多种渠道访问其知识资产。

轻松完成软件配置管理工作
软件配置管理是整个软件开发过程中的重要一环。作为一个强大的软件配置管理工具，Firefly除了提供核心的SCM功能创建存储库、检入/检出和基线标记等外还提供了一系列增强的特性帮助您轻松完成配置管理工作。
使用变更集组织版本变化 
Firefly将一组相关代码、文档的版本变化组成变更集作为修改提交的单位。变更集，记录了变更结果的内在联系同时也可以作为与变更管理系统联系的纽带。在本地工作区中通过使用变更集用户可以更好地组织本地工作有效提高工作效率在服务器端用户可以通过变更集查看项目开发的整个历史而不仅仅是单个文件的版本历史。
面向任务的开发模式 
Firefly采用了“面向任务”的开发模式即把变更集与Hansky的变更管理系统Butterfly中任务分配/缺陷修改/建议处理流程相关联从而将这些活动与其产生的结果有机地联系起来对其来龙去脉有个全面的反映更加方便项目人员了解和控制项目。 
易用的图形化版本树 
Firefly Version Tree是一个直观易用的图形化工具不仅能列出文件的历史版本、版本标记和其他相关信息还能清晰地显示分支和归并产生的版本变化。 
与开发工具的完美集成 
Firefly实现了与JBuilder、WSAD/Eclipse、MS Visual Studio系列等常见IDE的完美集成并且能够进一步通过微软的SCC API源代码控制标准接口与任何支持这个标准的开发工具如PowerBuilder等实现集成。因此开发人员能够直接在熟悉的开发环境中完成各种配置管理工作而无需切换到Firefly客户端。 
方便的配置审计和过程度量 
Firefly可以迅速生成某个版本/基线的配置报告、不同基线间配置项差异比较以及分支的历史变更报告有力支持配置审计需求。 
 
Firefly还能够提供诸如各开发人员某时间段内代码行变更、项目组某时间段内变更数量等度量指标为项目管理和过程改进提供量化信息。 
直观易用的用户界面 
除功能强大的GUI界面——Firefly Client外，Firefly还提供了易于使用的Web界面高效的命令行窗口等用户界面供不同用户选择。




